{"version":3,"sources":["./apps/trade/src/app/buysellprogress/buysellprogress.component.ts","./apps/trade/src/app/buysellprogress/buysellprogress.component.html","./apps/trade/src/app/stocks-grid/stocks-grid.component.ts","./apps/trade/src/app/stocks-grid/stocks-grid.component.html","./apps/trade/src/app/app.module.ts","./apps/trade/src/app/watchlist/watchlist.component.html","./apps/trade/src/app/watchlist/watchlist.component.ts","./apps/trade/src/app/app.component.ts","./apps/trade/src/app/app.component.html","./apps/trade/src/main.ts","./apps/trade/src/app/app.routing.module.ts","./apps/trade/src/environments/environment.ts","./apps/trade/src/app/position/position.component.html","./apps/trade/src/app/position/position.component.ts","./apps/trade/src/app/stocks.service.ts","./apps/trade/src/app/home/home.component.ts","./apps/trade/src/app/home/home.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n} from '@angular/core';\n\n@Component({\n  selector: 'money-buysellprogress',\n  templateUrl: './buysellprogress.component.html',\n  styleUrls: ['./buysellprogress.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BuySellProgressComponent implements OnChanges {\n  @Input() min: number;\n  @Input() max: number;\n  @Input() value: number;\n  percent: number;\n  color = 'primary';\n\n  ngOnChanges() {\n    const max = this.max - this.min;\n    const value = this.value - this.min;\n    this.percent = (100 * value) / max;\n    if (this.percent > 50) this.color = 'primary';\n    else this.color = 'warn';\n    console.log(max, value, this.percent);\n  }\n}\n","<mat-progress-bar mode=\"determinate\" [value]=\"percent\" [color]=\"color\"></mat-progress-bar>\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  ViewChild,\n  AfterViewInit,\n  OnInit,\n} from '@angular/core';\nimport { IStock } from '../home/trade.interface';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'money-stocks-grid',\n  templateUrl: './stocks-grid.component.html',\n  styleUrls: ['./stocks-grid.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      ),\n    ]),\n  ],\n})\nexport class StocksGridComponent implements AfterViewInit, OnInit {\n  @Input() displayedColumns: string[];\n  @Input() stocks: IStock[];\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource;\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.stocks);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  trackByStock = (index, stock: IStock) => index;\n}\n","<mat-table\n  [dataSource]=\"dataSource\"\n  class=\"stocks__grid\"\n  [trackBy]=\"trackByStock\"\n  matSort\n>\n  <ng-container matColumnDef=\"ticker\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\n      TICKER\n    </mat-header-cell>\n    <mat-cell class=\"grid__ticker\" *matCellDef=\"let row\">\n      <div>{{ row.ticker }}</div>\n      <div class=\"grid-ticker__count\">{{ row.count }}</div>\n    </mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"cost\">\n    <mat-header-cell mat-sort-header *matHeaderCellDef> COST </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\"> {{ row.cost }} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"lastPrice\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\n      LAST PRICE\n    </mat-header-cell>\n    <mat-cell\n      *matCellDef=\"let row\"\n      [class.green]=\"row.isProfit\"\n      [class.red]=\"!row.isProfit\"\n    >\n      {{ row.lastPrice }} ({{ row.perShareProfit }})\n    </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"profit\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\n      PROFIT/LOSS\n    </mat-header-cell>\n    <mat-cell\n      *matCellDef=\"let row\"\n      [class.green]=\"row.isProfit\"\n      [class.red]=\"!row.isProfit\"\n    >\n      {{ row.profit }}\n    </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Buy/Sell\">\n    <mat-header-cell *matHeaderCellDef> BUY/SELL </mat-header-cell>\n    <mat-cell\n      *matCellDef=\"let row\"\n      [class.green]=\"row.lastPrice > row.min\"\n      [class.red]=\"row.lastPrice < row.cost\"\n    >\n      {{ row.lastPrice < row.cost ? 'Average' : 'Sell off/Hold' }}\n    </mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"min\">\n    <mat-header-cell *matHeaderCellDef> MIN </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\"> {{ row.min }} </mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"max\">\n    <mat-header-cell *matHeaderCellDef> MAX </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\"> {{ row.max }} </mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"adjustShares\">\n    <mat-header-cell *matHeaderCellDef> Adjust Shares </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\">\n      <span [matBadge]=\"row.adjustRate\" matBadgeOverlap=\"false\">{{ row.adjustShares }}</span>\n    </mat-cell>\n  </ng-container>\n\n  <mat-header-row\n    class=\"stocks-grid__header\"\n    *matHeaderRowDef=\"displayedColumns; sticky: true\"\n  ></mat-header-row>\n  <mat-row\n    class=\"stocks-grid__row\"\n    *matRowDef=\"let row; columns: displayedColumns\"\n  ></mat-row>\n</mat-table>\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { WatchlistComponent } from './watchlist/watchlist.component';\nimport { PositionComponent } from './position/position.component';\nimport { BuySellProgressComponent } from './buysellprogress/buysellprogress.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { StocksGridComponent } from './stocks-grid/stocks-grid.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatBadgeModule } from '@angular/material/badge';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    WatchlistComponent,\n    PositionComponent,\n    BuySellProgressComponent,\n    StocksGridComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatProgressBarModule,\n    MatTableModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatBadgeModule,\n  ],\n  exports: [BrowserAnimationsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<div class=\"ticker\">\n  <div class=\"ticker-name\">\n    {{ stock.ticker }}\n  </div>\n\n  <div\n    class=\"last\"\n    [class.red]=\"stock.netChange < 0\"\n    [class.green]=\"stock.netChange > 0\"\n  >\n    ${{ stock.lastPrice }}\n  </div>\n</div>\n<div class=\"stock__body\">\n  <div class=\"min\">Min: {{ stock.min }}</div>\n  <div class=\"max\">Max: {{ stock.max }}</div>\n</div>\n<div class=\"indicator\" *ngIf=\"stock.min && stock.max\">\n  <money-buysellprogress\n    [min]=\"stock.min\"\n    [max]=\"stock.max\"\n    [value]=\"stock.lastPrice\"\n  ></money-buysellprogress>\n</div>\n<div class=\"actions\">\n  <button *ngIf=\"stock.min && stock.lastPrice <= stock.min\" class=\"buy\">\n    Buy @ {{ stock.lastPrice }}\n  </button>\n  <button class=\"sell\" *ngIf=\"stock.max && stock.lastPrice >= stock.max\">\n    Sell\n  </button>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { IStock } from '../home/trade.interface';\n\n@Component({\n  selector: 'money-watchlist',\n  templateUrl: './watchlist.component.html',\n  styleUrls: ['./watchlist.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WatchlistComponent {\n  @Input() stock: IStock;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'money-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'trade';\n\n\n\n \n}\n","<main>\n  <header class=\"header\">\n    <h1>STOCKS</h1>\n  </header>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n  <footer></footer>\n</main>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n\n<div class=\"ticker\">\n  <div class=\"ticker-name\">\n    {{ stock.ticker }}\n  </div>\n\n  <div\n    class=\"last\"\n    [class.red]=\"stock.position && stock.lastPrice < stock.cost\"\n    [class.green]=\"stock.position && stock.lastPrice > stock.cost\"\n  >\n    ${{ stock.lastPrice }}\n  </div>\n</div>\n<div class=\"stock__body\">\n  <div class=\"count\">Count: {{ stock.count }}</div>\n  <div class=\"cost\">Cost: {{ stock.cost }}</div>\n  <div class=\"min\">Min: {{ stock.min }}</div>\n  <div class=\"max\">Max: {{ stock.max }}</div>\n</div>\n<div class=\"indicator\" *ngIf=\"stock.min && stock.max\">\n  <money-buysellprogress\n    [min]=\"stock.min\"\n    [max]=\"stock.max\"\n    [value]=\"stock.lastPrice\"\n  ></money-buysellprogress>\n</div>\n<div class=\"actions\">\n  <button *ngIf=\"stock.min && stock.lastPrice <= stock.min\" class=\"buy\">\n    Buy @ {{ stock.lastPrice }}\n  </button>\n  <button class=\"sell\" *ngIf=\"stock.max && stock.lastPrice >= stock.max\">\n    Sell\n  </button>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IStock } from '../home/trade.interface';\n\n@Component({\n  selector: 'money-position',\n  templateUrl: './position.component.html',\n  styleUrls: ['./position.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PositionComponent {\n  @Input() stock: IStock;\n}\n","import { Injectable } from '@angular/core';\nimport { IStock } from './home/trade.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class StocksService {\n  howManySharesToAverage(stock: IStock, expectedRate: number) {\n    if (!stock || !expectedRate) throw new Error('Values cannot be null');\n\n    if (expectedRate <= stock.lastPrice)\n      throw new Error(\n        'The current price of the stock cannot be greater than the expected rate'\n      );\n\n    return (\n      (stock.count * (stock.cost - expectedRate)) /\n      (expectedRate - stock.lastPrice)\n    );\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, of, Subject, timer } from 'rxjs';\nimport {\n  catchError,\n  map,\n  retry,\n  share,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { trade } from '../stocks.json';\nimport { StocksService } from '../stocks.service';\nimport { IResponse, IStock, ITrade } from './trade.interface';\n\n@Component({\n  selector: 'money-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  trade$: Observable<ITrade>;\n  private stopPolling = new Subject();\n  loading = false;\n  displayedColumns: string[] = [\n    'ticker',\n    'cost',\n    'lastPrice',\n    'profit',\n    'Buy/Sell',\n    'min',\n    'max',\n    'adjustShares',\n  ];\n  constructor(private http: HttpClient, private stocksService: StocksService) {}\n\n  ngOnInit() {\n    this.trade$ = timer(1, 2000).pipe(\n      switchMap(() => this.getStocks(this.getTickers(trade))),\n      retry(),\n      share(),\n      takeUntil(this.stopPolling)\n    );\n  }\n\n  trackByTrade = (index, trade) => index;\n  trackByStock = (index, stock: IStock) => index;\n\n  getTickers(trade: ITrade[]) {\n    return [].concat(\n      ...trade\n        .filter((t) => !!t.stocks)\n        .map((t) => [...new Set(t.stocks.map((s) => s.ticker))])\n    );\n  }\n\n  getStocks(tickers: string[]) {\n    this.loading = true;\n    const httpHeaders = new HttpHeaders().set(\n      'Content-Type',\n      'application/json'\n    );\n    const params = new HttpParams()\n      .set('symbol', tickers.join(','))\n      .set('apikey', 'OSO9U25QK6O9X5JFOGEJUYTBUDPLQFFT');\n    return this.http\n      .get(`https://api.tdameritrade.com/v1/marketdata/quotes`, {\n        headers: httpHeaders,\n        responseType: 'json',\n        params: params,\n      })\n      .pipe(\n        map(this.mapResponse),\n        map((s: IResponse[]) => {\n          return trade.map((tr: ITrade) => ({\n            ...tr,\n            stocks: tr.stocks.map((st: IStock) => ({\n              ...st,\n              ...Array.from(Object.values(s)).find(\n                (s: IResponse) => s.symbol === st.ticker\n              ),\n            })),\n          }));\n        }),\n        map((trade) =>\n          trade.map((tr) => ({\n            ...tr,\n            stocks: tr.stocks\n              .map((s) => ({\n                ...s,\n                perShareProfit: (s.lastPrice - s.cost).toFixed(\n                  s.lastPrice < 0.01 ? 5 : 2\n                ),\n                isProfit: s.lastPrice - s.cost > 0,\n                profit: ((s.lastPrice - s.cost) * s.count).toFixed(2),\n                adjustShares: s.adjustRate\n                  ? this.stocksService\n                      .howManySharesToAverage(s, s.adjustRate)\n                      .toFixed(2)\n                  : null,\n              }))\n              .sort((s1, s2) => +s2.profit - +s1.profit),\n          }))\n        ),\n        tap(() => (this.loading = false)),\n        catchError(() => {\n          this.loading = false;\n          alert('ERROR');\n          return of(null);\n        })\n      );\n  }\n\n  mapResponse(response: any[]): IResponse[] {\n    return Array.from(Object.values(response)).map((r) => ({\n      lastPrice: r.lastPrice,\n      mark: r.mark,\n      lowPrice: r.lowPrice,\n      highPrice: r.highPrice,\n      high52Week: r['52WkHigh'],\n      low52Week: r['52WkLow'],\n      totalVolume: r.totalVolume,\n      netChange: r.netChange,\n      symbol: r.symbol,\n    }));\n  }\n\n  ngOnDestroy() {\n    this.stopPolling.next();\n  }\n}\n","<mat-tab-group color=\"primary\" [@.disabled]=\"true\">\n  <mat-tab\n    *ngFor=\"let trade of trade$ | async; let i = index; trackBy: trackByTrade\"\n  >\n    <ng-template mat-tab-label\n      ><div class=\"tab-header\">\n        {{ trade.code }}\n      </div></ng-template\n    >\n    <div class=\"stocks\">\n      <money-stocks-grid\n        [stocks]=\"trade.stocks\"\n        [displayedColumns]=\"displayedColumns\"\n      ></money-stocks-grid>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}