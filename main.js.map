{"version":3,"sources":["./apps/trade/src/app/buysellprogress/buysellprogress.component.ts","./apps/trade/src/app/buysellprogress/buysellprogress.component.html","./apps/trade/src/app/stocks-grid/stocks-grid.component.ts","./apps/trade/src/app/stocks-grid/stocks-grid.component.html","./apps/trade/src/app/app.module.ts","./apps/trade/src/app/watchlist/watchlist.component.html","./apps/trade/src/app/watchlist/watchlist.component.ts","./apps/trade/src/app/app.component.ts","./apps/trade/src/app/app.component.html","./apps/trade/src/main.ts","./apps/trade/src/app/app.routing.module.ts","./apps/trade/src/environments/environment.ts","./apps/trade/src/app/action/action.component.ts","./apps/trade/src/app/action/action.component.html","./apps/trade/src/app/position/position.component.html","./apps/trade/src/app/position/position.component.ts","./apps/trade/src/app/update-stock/update-stock.component.ts","./apps/trade/src/app/update-stock/update-stock.component.html","./apps/trade/src/app/stocks.service.ts","./apps/trade/src/app/home/home.component.ts","./apps/trade/src/app/home/home.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n} from '@angular/core';\n\n@Component({\n  selector: 'money-buysellprogress',\n  templateUrl: './buysellprogress.component.html',\n  styleUrls: ['./buysellprogress.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BuySellProgressComponent implements OnChanges {\n  @Input() min: number;\n  @Input() max: number;\n  @Input() value: number;\n  percent: number;\n  color = 'primary';\n\n  ngOnChanges() {\n    const max = this.max - this.min;\n    const value = this.value - this.min;\n    this.percent = (100 * value) / max;\n    if (this.percent > 50) this.color = 'primary';\n    else this.color = 'warn';\n    console.log(max, value, this.percent);\n  }\n}\n","<mat-progress-bar mode=\"determinate\" [value]=\"percent\" [color]=\"color\"></mat-progress-bar>\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  ViewChild,\n  AfterViewInit,\n  OnChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { IStock, ITrade } from '../home/trade.interface';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'money-stocks-grid',\n  templateUrl: './stocks-grid.component.html',\n  styleUrls: ['./stocks-grid.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      ),\n    ]),\n  ],\n})\nexport class StocksGridComponent implements AfterViewInit, OnChanges {\n  @Input() displayedColumns: string[];\n  @Input() trade: ITrade;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() moveToWatchListEvent = new EventEmitter();\n  @Output() deleteEvent = new EventEmitter();\n  @Output() editEvent = new EventEmitter();\n  @Output() addEvent = new EventEmitter();\n  dataSource;\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges() {\n    this.dataSource = new MatTableDataSource(this.trade.stocks);\n    this.dataSource.sort = this.sort;\n  }\n\n  add(e: MouseEvent) {\n    this.addEvent.emit();\n    e.stopPropagation();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  trackByStock = (index, stock: IStock) => index;\n\n  moveToWatchList(stock: IStock) {\n    this.moveToWatchListEvent.emit(stock);\n  }\n\n  delete(stock: IStock) {\n    this.deleteEvent.emit(stock);\n  }\n\n  edit(stock: IStock) {\n    this.editEvent.emit(stock);\n  }\n}\n","<mat-table\n  [dataSource]=\"dataSource\"\n  class=\"stocks__grid\"\n  [trackBy]=\"trackByStock\"\n  matSort\n>\n  <ng-container matColumnDef=\"ticker\" sticky>\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\n      <button mat-icon-button (click)=\"add($event)\" aria-label=\"add stock\">\n        <mat-icon>add</mat-icon></button\n      >TICKER\n    </mat-header-cell>\n    <mat-cell class=\"grid__ticker\" *matCellDef=\"let row\">\n      <div>{{ row.ticker }}</div>\n      <div class=\"grid-ticker__count\">{{ row.count }}</div>\n    </mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"lastPrice\" sticky>\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\n      LAST PRICE\n    </mat-header-cell>\n    <mat-cell\n      *matCellDef=\"let row\"\n      [class.green]=\"row.isProfit\"\n      [class.red]=\"!row.isProfit\"\n    >\n      {{ row.lastPrice }} ({{ row.perShareProfit }})\n    </mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"cost\">\n    <mat-header-cell mat-sort-header *matHeaderCellDef> COST </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\"> {{ row.cost }} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalcost\">\n    <mat-header-cell mat-sort-header *matHeaderCellDef>\n      TOTAL COST\n    </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\"> {{ row.totalCost }} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"profit\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\n      PROFIT/LOSS\n    </mat-header-cell>\n    <mat-cell\n      *matCellDef=\"let row\"\n      [class.green]=\"row.isProfit\"\n      [class.red]=\"!row.isProfit\"\n    >\n      {{ row.profit }}\n    </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Buy/Sell\">\n    <mat-header-cell *matHeaderCellDef> BUY/SELL </mat-header-cell>\n    <mat-cell\n      *matCellDef=\"let row\"\n      [class.green]=\"row.lastPrice > row.min\"\n      [class.red]=\"row.lastPrice < row.cost\"\n    >\n      {{ row.lastPrice < row.cost ? 'Average' : 'Sell off/Hold' }}\n    </mat-cell>\n  </ng-container>\n  <!-- <ng-container matColumnDef=\"min\">\n    <mat-header-cell *matHeaderCellDef> MIN </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\"> {{ row.min }} </mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"max\">\n    <mat-header-cell *matHeaderCellDef> MAX </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\"> {{ row.max }} </mat-cell>\n  </ng-container> -->\n  <ng-container matColumnDef=\"adjustShares\">\n    <mat-header-cell *matHeaderCellDef> Adjust Shares </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\">\n      <span\n        class=\"stretch-badge\"\n        [matBadge]=\"row.adjustRate\"\n        matBadgeOverlap=\"false\"\n      >\n        {{ row.adjustShares }} {{ !!row.adjustRate ? '|' : '' }}\n        {{ row.adjustShares * row.adjustRate | currency }}\n      </span>\n\n      <!-- <mat-chip-list *ngIf=\"row.adjustRate\">\n        <mat-chip color=\"primary\" selected>{{ row.adjustRate }}</mat-chip>\n        <mat-chip color=\"accent\" selected>{{ row.adjustShares }}</mat-chip>\n        <mat-chip color=\"warn\" selected>{{\n          row.adjustShares * row.adjustRate | currency\n        }}</mat-chip>\n      </mat-chip-list> -->\n    </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\n    <mat-cell *matCellDef=\"let row\">\n      <button\n        mat-icon-button\n        color=\"primary\"\n        (click)=\"edit(row)\"\n        aria-label=\"edit\"\n      >\n        <mat-icon>edit</mat-icon>\n      </button>\n      <button\n        mat-icon-button\n        color=\"accent\"\n        (click)=\"moveToWatchList(row)\"\n        aria-label=\"move to watchlist\"\n      >\n        <mat-icon>drive_file_move</mat-icon>\n      </button>\n      <button\n        mat-icon-button\n        (click)=\"delete(row)\"\n        color=\"warn\"\n        aria-label=\"delete icon\"\n      >\n        <mat-icon>delete</mat-icon>\n      </button>\n    </mat-cell>\n  </ng-container>\n\n  <mat-header-row\n    class=\"stocks-grid__header\"\n    *matHeaderRowDef=\"displayedColumns; sticky: true\"\n  ></mat-header-row>\n  <mat-row\n    class=\"stocks-grid__row\"\n    *matRowDef=\"let row; columns: displayedColumns\"\n  ></mat-row>\n</mat-table>\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { WatchlistComponent } from './watchlist/watchlist.component';\nimport { PositionComponent } from './position/position.component';\nimport { BuySellProgressComponent } from './buysellprogress/buysellprogress.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { StocksGridComponent } from './stocks-grid/stocks-grid.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from '../environments/environment';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { ActionComponent } from './action/action.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { UpdateStockComponent } from './update-stock/update-stock.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    WatchlistComponent,\n    PositionComponent,\n    BuySellProgressComponent,\n    StocksGridComponent,\n    ActionComponent,\n    UpdateStockComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatProgressBarModule,\n    MatTableModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatButtonToggleModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig, 'shawnz-trade'),\n    AngularFireDatabaseModule,\n    MatButtonModule,\n    MatBottomSheetModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatNativeDateModule,\n    MatSidenavModule,\n  ],\n  exports: [BrowserAnimationsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<div class=\"ticker\">\n  <div class=\"ticker-name\">\n    {{ stock.ticker }}\n  </div>\n\n  <div\n    class=\"last\"\n    [class.red]=\"stock.netChange < 0\"\n    [class.green]=\"stock.netChange > 0\"\n  >\n    ${{ stock.lastPrice }}\n  </div>\n</div>\n<div class=\"stock__body\">\n  <div class=\"min\">Min: {{ stock.min }}</div>\n  <div class=\"max\">Max: {{ stock.max }}</div>\n</div>\n<div class=\"indicator\" *ngIf=\"stock.min && stock.max\">\n  <money-buysellprogress\n    [min]=\"stock.min\"\n    [max]=\"stock.max\"\n    [value]=\"stock.lastPrice\"\n  ></money-buysellprogress>\n</div>\n<div class=\"actions\">\n  <button *ngIf=\"stock.min && stock.lastPrice <= stock.min\" class=\"buy\">\n    Buy @ {{ stock.lastPrice }}\n  </button>\n  <button class=\"sell\" *ngIf=\"stock.max && stock.lastPrice >= stock.max\">\n    Sell\n  </button>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { IStock } from '../home/trade.interface';\n\n@Component({\n  selector: 'money-watchlist',\n  templateUrl: './watchlist.component.html',\n  styleUrls: ['./watchlist.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WatchlistComponent {\n  @Input() stock: IStock;\n}\n","import { Component } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable, Subject } from 'rxjs';\nimport { StocksService } from './stocks.service';\n\n@Component({\n  selector: 'money-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'trade';\n  stocks$: Observable<any[]>;\n  \n\n  constructor(public db: AngularFireDatabase, private stockService:StocksService) {\n    this.stocks$ = db.list('trade').valueChanges();\n    this.stocks$.subscribe(console.log);\n  \n  }\n\n  open() {\n    this.stockService.openSidenav$.next(true);\n  }\n\n  addNewTrade() {\n    this.stockService.addNewTrade$.next();\n  }\n}\n","<main>\n  <header class=\"header\">\n    <button mat-icon-button (click)=\"open()\" aria-label=\"edit\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <h1>STOCKS</h1>\n    <button mat-button class=\"trade__button\" (click)=\"addNewTrade()\">\n      Add New Trade\n    </button>\n  </header>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n  <footer></footer>\n</main>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyAEYfISRAoFYXz-MsCe_yv4qR895PZVqXY',\n    authDomain: 'shawnz-trade.firebaseapp.com',\n    projectId: 'shawnz-trade',\n    storageBucket: 'shawnz-trade.appspot.com',\n    messagingSenderId: '19655963536',\n    appId: '1:19655963536:web:e60bdc947094e0fe5db915',\n    measurementId: 'G-7Y2YFCYLER',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport {\n  MatBottomSheetRef,\n  MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\n\n@Component({\n  selector: 'money-action',\n  templateUrl: './action.component.html',\n  styleUrls: ['./action.component.scss'],\n})\nexport class ActionComponent implements OnInit {\n  constructor(\n    private _bottomSheetRef: MatBottomSheetRef<ActionComponent>,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    public db: AngularFireDatabase\n  ) {}\n  ngOnInit(): void {\n    console.log(this.data);\n  }\n\n  addNewTrade(code: string, name: string, owner: string) {\n    const tradeRef = this.db.list('trade');\n    tradeRef.push({\n      code: code,\n      name: name,\n      owner: owner,\n    });\n  }\n}\n","<form class=\"action-form\">\n  <h2 class=\"action__header\">Add Trade</h2>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Code</mat-label>\n    <input #code matInput placeholder=\"Code\" autocomplete=\"off\" />\n  </mat-form-field>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Name</mat-label>\n    <input #name matInput placeholder=\"Name\" autocomplete=\"off\" />\n  </mat-form-field>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Owner</mat-label>\n    <input #owner matInput placeholder=\"Owner\" autocomplete=\"off\" />\n  </mat-form-field>\n  <button\n    trade__button\n    mat-raised-button\n    color=\"primary\"\n    class=\"trade__button\"\n    (click)=\"addNewTrade(code.value, name.value, owner.value)\"\n  >\n    Add\n  </button>\n</form>\n","\n\n<div class=\"ticker\">\n  <div class=\"ticker-name\">\n    {{ stock.ticker }}\n  </div>\n\n  <div\n    class=\"last\"\n    [class.red]=\"stock.position && stock.lastPrice < stock.cost\"\n    [class.green]=\"stock.position && stock.lastPrice > stock.cost\"\n  >\n    ${{ stock.lastPrice }}\n  </div>\n</div>\n<div class=\"stock__body\">\n  <div class=\"count\">Count: {{ stock.count }}</div>\n  <div class=\"cost\">Cost: {{ stock.cost }}</div>\n  <div class=\"min\">Min: {{ stock.min }}</div>\n  <div class=\"max\">Max: {{ stock.max }}</div>\n</div>\n<div class=\"indicator\" *ngIf=\"stock.min && stock.max\">\n  <money-buysellprogress\n    [min]=\"stock.min\"\n    [max]=\"stock.max\"\n    [value]=\"stock.lastPrice\"\n  ></money-buysellprogress>\n</div>\n<div class=\"actions\">\n  <button *ngIf=\"stock.min && stock.lastPrice <= stock.min\" class=\"buy\">\n    Buy @ {{ stock.lastPrice }}\n  </button>\n  <button class=\"sell\" *ngIf=\"stock.max && stock.lastPrice >= stock.max\">\n    Sell\n  </button>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IStock } from '../home/trade.interface';\n\n@Component({\n  selector: 'money-position',\n  templateUrl: './position.component.html',\n  styleUrls: ['./position.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PositionComponent {\n  @Input() stock: IStock;\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject,\n} from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport {\n  MatBottomSheetRef,\n  MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { ActionComponent } from '../action/action.component';\n\n@Component({\n  selector: 'money-update-stock',\n  templateUrl: './update-stock.component.html',\n  styleUrls: ['./update-stock.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpdateStockComponent implements OnInit {\n  constructor(\n    private _bottomSheetRef: MatBottomSheetRef<ActionComponent>,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    public db: AngularFireDatabase\n  ) {}\n  ngOnInit(): void {\n    console.log(this.data);\n  }\n\n  addNewTrade(code: string, name: string, owner: string) {\n    const tradeRef = this.db.list('trade');\n    tradeRef.push({\n      code: code,\n      name: name,\n      owner: owner,\n    });\n  }\n\n  updateStock(code: string, name: string, count: string) {\n    \n  }\n}\n","<form class=\"update-form\">\n  <h2 class=\"update__header\">Add Stock</h2>\n  <mat-form-field class=\"padd__15\">\n    <mat-label>Ticker</mat-label>\n    <input #code matInput placeholder=\"Code\" autocomplete=\"off\" />\n  </mat-form-field>\n  <mat-form-field class=\"padd__15\">\n    <mat-label>Cost</mat-label>\n    <input #name matInput placeholder=\"Name\" autocomplete=\"off\" />\n  </mat-form-field>\n  <mat-form-field class=\"padd__15\">\n    <mat-label>Count</mat-label>\n    <input #count matInput placeholder=\"Owner\" autocomplete=\"off\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"padd__15\">\n    <mat-label>Expires</mat-label>\n    <input matInput [matDatepicker]=\"picker\" />\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n  </mat-form-field>\n  <mat-radio-button value=\"true\" class=\"padd__15\">Long term</mat-radio-button>\n  <button\n    trade__button\n    mat-raised-button\n    color=\"primary\"\n    class=\"trade__button padd__15\"\n    (click)=\"updateStock(code.value, name.value, count.value)\"\n  >\n    Add\n  </button>\n</form>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { IStock, ITrade } from './home/trade.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class StocksService {\n  openSidenav$ = new Subject<boolean>();\n  addNewTrade$ = new Subject<Partial<ITrade>>();\n  howManySharesToAverage(stock: IStock, expectedRate: number) {\n    if (!stock || !expectedRate) return 0;\n    //throw new Error('Values cannot be null');\n\n    if (expectedRate <= stock.lastPrice) return 0;\n    // throw new Error(\n    //   'The current price of the stock cannot be greater than the expected rate'\n    // );\n\n    return (\n      (stock.count * (stock.cost - expectedRate)) /\n      (expectedRate - stock.lastPrice)\n    );\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport {\n  MatBottomSheet,\n  MatBottomSheetConfig,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of, Subject, timer } from 'rxjs';\nimport {\n  catchError,\n  first,\n  map,\n  retry,\n  share,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { ActionComponent } from '../action/action.component';\nimport { StocksService } from '../stocks.service';\nimport { UpdateStockComponent } from '../update-stock/update-stock.component';\nimport { IResponse, IStock, ITrade } from './trade.interface';\nimport { trade } from '../stocks.json';\n\n@Component({\n  selector: 'money-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  openSidenav = true;\n  trade$: Observable<ITrade>;\n  private stopPolling = new Subject();\n  loading = false;\n  stocks$: Observable<ITrade[]>;\n  displayedColumns: string[] = [\n    'ticker',\n    'lastPrice',\n    'cost',\n    'totalcost',\n    'profit',\n    // 'Buy/Sell',\n    // 'min',\n    // 'max',\n    'adjustShares',\n    'action',\n  ];\n  actionStocks: IStock[] = [];\n  constructor(\n    private http: HttpClient,\n    private stocksService: StocksService,\n    public db: AngularFireDatabase,\n    private bottomSheet: MatBottomSheet\n  ) {}\n\n  ngOnInit() {\n    // this.stocks$ = this.db.list<ITrade>('trade').valueChanges();\n    this.stocks$ = of(trade);\n\n    this.trade$ = timer(1, 2000).pipe(\n      // tap(() => (this.actionStocks = [])),\n      switchMap(() => this.stocks$),\n      switchMap((trade) => this.getStocks(trade)),\n      retry(),\n      share(),\n      takeUntil(this.stopPolling)\n    );\n\n    this.stocksService.openSidenav$\n      .asObservable()\n      .pipe(\n        tap(console.log),\n        tap((x) => (this.openSidenav = x))\n      )\n      .subscribe();\n\n    this.stocksService.addNewTrade$\n      .asObservable()\n      .pipe(tap(() => this.addNewTrade()))\n      .subscribe();\n  }\n\n  close() {\n    this.openSidenav = false;\n  }\n\n  trackByTrade = (index, trade) => index;\n  trackByStock = (index, stock: IStock) => index;\n\n  getTickers(trade: ITrade[]) {\n    return [].concat(\n      ...trade\n        .filter((t) => !!t.stocks)\n        .map((t) => [...new Set(t.stocks.map((s) => s.ticker))])\n    );\n  }\n\n  addNewTrade() {\n    const bottomSheetConfig: MatBottomSheetConfig = {\n      autoFocus: true,\n      data: {\n        tradeRef: this.db.list('trade'),\n      },\n    };\n    this.bottomSheet.open(ActionComponent, bottomSheetConfig);\n    // const trade: ITrade = {\n    //   code: 'Pennies',\n    //   name: 'PENNY',\n    //   owner: 'TONY',\n    //   stocks: [],\n    // };\n    // const tradeRef = this.db.list('trade');\n    // tradeRef.push(trade);\n  }\n\n  onAddStock(stock: Partial<IStock>) {\n    const bottomSheetConfig: MatBottomSheetConfig = {\n      autoFocus: true,\n      data: {\n        tradeRef: this.db.list('trade'),\n        stock: stock,\n        action: 'ADD',\n      },\n    };\n    this.bottomSheet.open(UpdateStockComponent, bottomSheetConfig);\n  }\n\n  onEditStock(stock: Partial<IStock>) {\n    const bottomSheetConfig: MatBottomSheetConfig = {\n      autoFocus: true,\n      data: {\n        tradeRef: this.db.list('trade'),\n        stock: stock,\n        action: 'EDIT',\n      },\n    };\n    this.bottomSheet.open(UpdateStockComponent, bottomSheetConfig);\n  }\n\n  onMoveToWatchList(stock: Partial<IStock>) {\n    const bottomSheetConfig: MatBottomSheetConfig = {\n      autoFocus: true,\n      data: {\n        tradeRef: this.db.list('trade'),\n        stock: stock,\n        action: 'MOVE',\n      },\n    };\n    this.bottomSheet.open(UpdateStockComponent, bottomSheetConfig);\n  }\n\n  onDeleteStock(stock: IStock, platform: string) {\n    console.log(stock);\n    this.stocks$.pipe(first()).subscribe((stocks) => {\n      const st = stocks.find((s) => s.name === stock.tradeName);\n      st.stocks = st.stocks.filter((sto) => sto.ticker !== stock.ticker);\n      this.db.list('trade').update(st, { stocks: st.stocks });\n    });\n  }\n\n  getStocks(trade: ITrade[]) {\n    const tickers = this.getTickers(trade);\n\n    this.loading = true;\n    const httpHeaders = new HttpHeaders().set(\n      'Content-Type',\n      'application/json'\n    );\n    const params = new HttpParams()\n      .set('symbol', tickers.join(','))\n      .set('apikey', 'OSO9U25QK6O9X5JFOGEJUYTBUDPLQFFT');\n    return this.http\n      .get(`https://api.tdameritrade.com/v1/marketdata/quotes`, {\n        headers: httpHeaders,\n        responseType: 'json',\n        params: params,\n      })\n      .pipe(\n        map(this.mapResponse),\n        map((s: IResponse[]) => {\n          return trade.map((tr: ITrade) => ({\n            ...tr,\n            stocks: tr.stocks\n              ? tr.stocks.map((st: IStock) => ({\n                  ...st,\n                  tradeName: tr.name,\n                  ...Array.from(Object.values(s)).find(\n                    (s: IResponse) => s.symbol === st.ticker\n                  ),\n                }))\n              : [],\n          }));\n        }),\n        map((trade) =>\n          trade.map((tr) => ({\n            ...tr,\n            stocks: tr.stocks\n              .map((s) => {\n                if (s.lastPrice <= s.strikeRate) this.addStrikeStocks(s);\n                if (s.lastPrice >= s.sellRate) this.addSellStocks(s);\n                return {\n                  ...s,\n                  perShareProfit: (s.lastPrice - s.cost).toFixed(\n                    s.lastPrice < 0.01 ? 5 : 2\n                  ),\n                  isProfit: s.lastPrice - s.cost > 0,\n                  profit: ((s.lastPrice - s.cost) * s.count).toFixed(2),\n                  adjustShares: s.adjustRate\n                    ? this.stocksService\n                        .howManySharesToAverage(s, s.adjustRate)\n                        .toFixed(2)\n                    : null,\n                  totalCost: (s.cost * s.count).toFixed(2),\n                };\n              })\n              .sort((s1, s2) => +s2.profit - +s1.profit),\n          }))\n        ),\n        tap(() => (this.loading = false)),\n        catchError((e) => {\n          this.loading = false;\n          console.error(e);\n          return of(null);\n        })\n      );\n  }\n\n  addStrikeStocks(strikeStock: IStock) {\n    const stockExist = this.actionStocks.find(\n      (ss) =>\n        ss.ticker === strikeStock.ticker &&\n        ss.tradeName === strikeStock.tradeName\n    );\n    if (stockExist) {\n      this.actionStocks = [\n        ...this.actionStocks.filter(\n          (ss) =>\n            ss.ticker !== strikeStock.ticker &&\n            ss.tradeName !== strikeStock.tradeName\n        ),\n        { ...strikeStock, strike: true },\n      ];\n    } else {\n      this.actionStocks.push({ ...strikeStock, strike: true });\n    }\n  }\n\n  addSellStocks(sellStock: IStock) {\n    const stockExist = this.actionStocks.find(\n      (ss) =>\n        ss.ticker === sellStock.ticker && ss.tradeName === sellStock.tradeName\n    );\n    if (stockExist) {\n      this.actionStocks = [\n        ...this.actionStocks.filter(\n          (ss) =>\n            ss.ticker !== sellStock.ticker &&\n            ss.tradeName !== sellStock.tradeName\n        ),\n        { ...sellStock, sell: true },\n      ];\n    } else {\n      this.actionStocks.push({ ...sellStock, sell: true });\n    }\n  }\n\n  mapResponse(response: any[]): IResponse[] {\n    return Array.from(Object.values(response)).map((r) => ({\n      lastPrice: r.lastPrice,\n      mark: r.mark,\n      lowPrice: r.lowPrice,\n      highPrice: r.highPrice,\n      high52Week: r['52WkHigh'],\n      low52Week: r['52WkLow'],\n      totalVolume: r.totalVolume,\n      netChange: r.netChange,\n      symbol: r.symbol,\n    }));\n  }\n\n  ngOnDestroy() {\n    this.stopPolling.next();\n  }\n}\n","<mat-sidenav-container class=\"example-container\">\n  <mat-sidenav\n    #sidenav\n    mode=\"side\"\n    [opened]=\"openSidenav\"\n    [fixedInViewport]=\"true\"\n    [fixedTopGap]=\"0\"\n    [fixedBottomGap]=\"0\"\n    class=\"left__sidenav\"\n  >\n    <header class=\"header\">\n      <h1>ACTION STOCKS</h1>\n      <button mat-icon-button (click)=\"close()\" aria-label=\"edit\">\n        <mat-icon>menu_open</mat-icon>\n      </button>\n    </header>\n    <div class=\"strike__stocks\">\n      <div\n        class=\"strike__stock\"\n        *ngFor=\"let actionStock of actionStocks; trackBy: trackByStock\"\n      >\n        <div class=\"strike__ticker\">\n          <div>{{ actionStock.ticker }}</div>\n          <div class=\"light-gray small\">{{ actionStock.tradeName }}</div>\n        </div>\n        <div class=\"action__container\">\n          <span class=\"stock__action red__background\" *ngIf=\"actionStock.strike\"\n            >BUY < {{ actionStock.strikeRate }}</span\n          >\n          <span class=\"stock__action green__background\" *ngIf=\"actionStock.sell\"\n            >SELL > {{ actionStock.sellRate }}</span\n          >\n        </div>\n        <div *ngIf=\"actionStock.sell\">\n          <div class=\"green\">{{ actionStock.lastPrice }}</div>\n          <div class=\"light-gray small\">{{ actionStock.cost }}</div>\n        </div>\n        <div *ngIf=\"actionStock.strike\">\n          <div class=\"green\">{{ actionStock.lastPrice }}</div>\n          <div class=\"light-gray small\">{{ actionStock.cost }}</div>\n        </div>\n      </div>\n    </div>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <mat-tab-group color=\"primary\" [@.disabled]=\"true\">\n      <mat-tab\n        *ngFor=\"\n          let trade of trade$ | async;\n          let i = index;\n          trackBy: trackByTrade\n        \"\n      >\n        <ng-template mat-tab-label\n          ><div class=\"tab-header\">\n            {{ trade.name }}\n          </div></ng-template\n        >\n        <div class=\"stocks\">\n          <money-stocks-grid\n            [trade]=\"trade\"\n            [displayedColumns]=\"displayedColumns\"\n            (moveToWatchListEvent)=\"onMoveToWatchList($event)\"\n            (deleteEvent)=\"onDeleteStock($event)\"\n            (editEvent)=\"onEditStock($event)\"\n            (addEvent)=\"onAddStock($event)\"\n          ></money-stocks-grid>\n        </div>\n      </mat-tab>\n    </mat-tab-group>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}